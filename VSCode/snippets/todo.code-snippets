{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"nbsp": {
		"prefix": [
			"&nbsp;"
		],
		"body": [
			"&nbsp;"
		],
		"description": "&nbsp;"
	},
	"tripple quote": {
		"prefix": [
			"```"
		],
		"body": [
			"```$1",
			"```"
		],
		"description": "triple quote"
	},
	"from toolz import pipe": {
		"prefix": [
			"from toolz import pipe",
			"imppp"
		],
		"body": [
			"from toolz import pipe"
		],
		"description": "from toolz import pipe"
	},
	"Create a new Database": {
		"prefix": "pgCreateDatabase",
		"body": [
			"-- Create a new database called '${1:DatabaseName}'",
			"CREATE DATABASE ${1:DatabaseName}"
		],
		"description": "Create a new PostgreSQL Database"
	},
	"List databases": {
		"prefix": "pgListDatabases",
		"body": [
			"-- Get a list of databases",
			"SELECT datname FROM pg_database",
			"WHERE datistemplate = false"
		],
		"description": "List PostgreSQL databases"
	},
	"postgres create function": {
		"prefix": [
			"pgFunction"
		],
		"body": [
			"CREATE OR REPLACE FUNCTION ${1:fname}(${2:param})",
			"\tRETURNS ${3:returntype}",
			"\tLANGUAGE plpgsql",
			"\tas",
			"$$",
			"DECLARE",
			"\t${4:variable} ${5:type}",
			"BEGIN",
			" -- logic",
			"END;",
			"$$",
		],
		"description": "pgFunction"
	},
	"switch case": {
		"prefix": [
			"switch",
		],
		"body": [
			"switch ($1) {",
			"'$2' => $3,",
			"'$4' => $5,",
			"_ => $6, //Default value",
			"};",
		],
		"description": "switch case"
	},
	"insert date.now": {
		"prefix": [
			"\\date",
		],
		"body": [
			"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE"
		],
		"description": "insert date.now"
	},
	"insert datetime.now": {
		"prefix": [
			"\\now",
			"\\datetime",
		],
		"body": [
			"$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND"
		],
		"description": "insert datetime.now"
	},
	"subarea mermaid": {
		"prefix": [
			"classDef subarea",
			"subarea",
		],
		"body": [
			"\tclassDef subarea fill:none,stroke:#CCC,stroke-width:2px,color:#777777,stroke-dasharray: 5 5",
			"\tclass $1 subarea"
		],
		"description": "Mermaid subarea"
	},
	"flowchart": {
		"prefix": [
			"flow",
			"graph"
		],
		"body": [
			"graph TD",
			"\t${1:A}-->${2:B}"
		],
		"description": "Insert a directive"
	},
	"flowchartLR": {
		"prefix": [
			"flowLR",
			"graphLR"
		],
		"body": [
			"graph LR",
			"\t${1:A}-->${2:B}"
		],
		"description": "Insert a directive"
	},
	"directives for mermaid": {
		"prefix": "%%init",
		"body": [
			"%%{",
			"\tinit: {",
			"\t\t\"theme\":\"base\",",
			"\t\t\"themeVariables\": {",
			"\t\t\t\"textColor\": \"white\"",
			"\t\t\t\"tertiaryColor\": \"darkgray\"",
			"\t\t\t\"mainBkg\": \"black\"",
			"\t\t}",
			"\t}",
			"}%%\n"
		],
		"description": "Insert a directive"
	},
	"markdown table 4x4": {
		"prefix": "table4",
		"body": [
			"|$1 | $2 | $3 | $4 |",
			"| - | - | - | - |",
			"|   |   |   |   |"
		],
		"description": "Insert a simple table"
	},
	"markdown table 3x3": {
		"prefix": "table3",
		"body": [
			"|$1 | $2 | $3 |",
			"| - | - | - |",
			"|   |   |   |"
		],
		"description": "Insert a simple table 3x3"
	},
	"markdown table": {
		"prefix": "table",
		"body": [
			"|$1 | $2 |",
			"| - | - |",
			"|   |   |"
		],
		"description": "Insert a simple table"
	},
	"mermaid": {
		"prefix": [
			"```mermaid",
		],
		"body": [
			"```mermaid",
			"flowchart LR",
			"\t${1:A}-->${2:B}",
			"```",
			""
		],
		"description": "mermaid"
	},
	"@startuml": {
		"prefix": [
			"@startuml",
		],
		"body": [
			"@startuml",
			"!pragma layout smetana",
			"$1",
			"@enduml",
		],
		"description": "plantuml"
	},
	"markdownUml": {
		"prefix": [
			"```plantuml",
			"plantuml"
		],
		"body": [
			"```plantuml",
			"@startuml",
			"!pragma layout smetana",
			"$1",
			"@enduml",
			"```",
			"$2"
		],
		"description": "md uml"
	},
	"isnot": {
		"prefix": [
			"\\ne",
		],
		"body": "!= ",
		"description": "!="
	},
	"return": {
		"prefix": [
			"ret",
		],
		"body": "return $1;",
		"description": "return ;"
	},
	"todo": {
		"prefix": [
			"td"
		],
		"body": "// TODO: $1",
		"description": "TODO"
	},
	"todo1": {
		"prefix": [
			"td1"
		],
		"body": "// TODO $1: $2",
		"description": "TODO 1"
	},
}