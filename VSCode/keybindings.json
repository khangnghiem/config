// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "cmd+/",
        "command": "runCommands",
        "args": {
            "commands": [
                "editor.action.commentLine",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "sqlite3-editor.execute",
                "cursorDown",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus && editorLangId == 'query-editor'"
    },
    {
        "key": "shift+enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "dbcode.editor.execute",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus && !notebookCellListFocused && editorLangId == 'sql' && resourceScheme != 'dbcode' || editorTextFocus && !notebookCellListFocused && resourceScheme != 'dbcode' && resourceFilename =~ /.sql$/"
    },
    {
        "key": "shift+enter",
        "command": "runCommands",
        "args": {
            "commands": [
                "extension.executeAREPLBlock",
                "cursorDown",
                "cursorDown"
            ]
        },
        "when": "editorTextFocus && editorLangId == 'python' && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+cmd+0",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.focusFirstEditorGroup",
                "workbench.action.toggleEditorWidths"
            ]
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+-",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.focusSecondEditorGroup",
                "workbench.action.toggleEditorWidths"
            ]
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+=",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.focusThirdEditorGroup",
                "workbench.action.toggleEditorWidths"
            ]
        },
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "sqlite3-editor.execute",
        "when": "editorTextFocus && editorLangId == 'query-editor'"
    },
    {
        "key": "shift+enter",
        "command": "-sqlite3-editor.execute",
        "when": "editorLangId == 'query-editor'"
    },
    {
        "key": "cmd+enter",
        "command": "extension.executeAREPLBlock",
        "when": "editorTextFocus && editorLangId == 'python' && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "cmd+k v",
        "command": "extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus && resourceLangId == python"
    },
    {
        "key": "cmd+k cmd+d",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus",
        "args": {
            "snippet": "$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND"
        }
    },
    {
        "key": "ctrl+s",
        "command": "cursorLeft"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+s",
        "command": "cursorLeftSelect"
    },
    {
        "key": "cmd+k cmd+v",
        "command": "livePreview.start.internalPreview.atFile",
    },
    {
        "key": "alt+d",
        "command": "editor.action.revealDefinition"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.focusPreviousGroup"
    },
    {
        "key": "cmd+shift+j",
        "command": "REPLVariables.focus"
    },
    {
        "key": "alt+x",
        "command": "rainbow-csv.Align"
    },
    {
        "key": "alt+shift+x",
        "command": "rainbow-csv.Shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.debug.panel.action.clearReplAction",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.output.action.clearOutput",
        "when": "inOutput"
    },
    {
        "key": "ctrl+shift+-",
        "command": "editor.action.transformToSnakecase"
    },
    {
        "key": "ctrl+shift+z",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "ctrl+shift+x",
        "command": "editor.action.transformToTitlecase"
    },
    {
        "key": "ctrl+shift+c",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "cmd+shift+.",
        "command": "extension.toggleFiles"
    },
    {
        "key": "alt+left",
        "command": "cursorWordPartLeft"
    },
    {
        "key": "alt+shift+left",
        "command": "cursorWordPartLeftSelect"
    },
    {
        "key": "alt+right",
        "command": "cursorWordPartRight"
    },
    {
        "key": "alt+shift+right",
        "command": "cursorWordPartRightSelect"
    },
    {
        "key": "ctrl+;",
        "command": "cursorWordRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+;",
        "command": "cursorWordRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "cursorWordLeft"
    },
    {
        "key": "ctrl+shift+j",
        "command": "cursorWordLeftSelect"
    },
    // {
    //     "key": "ctrl+alt+j",
    //     "command": "editor.action.moveCarretLeftAction"
    // },
    // {
    //     "key": "ctrl+alt+;",
    //     "command": "editor.action.moveCarretRightAction"
    // },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditorInGroup",
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditorInGroup",
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "sideBarFocus || filesExplorerFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    // {
    //     "key": "ctrl+shift+tab",
    //     "command": "workbench.action.terminal.focusPreviousPane",
    //     "when": "terminalFocus && terminalProcessSupported"
    // },
    {
        "key": "ctrl+f6",
        "command": "flutter.hotRestart"
    },
    {
        "key": "ctrl+cmd+9",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    // {
    //     "key": "ctrl+cmd+0",
    //     "command": "gitlens.toggleZenMode"
    // },
    {
        "key": "ctrl+a",
        "command": "list.focusParent",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+ctrl+g",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousPanelView",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextPanelView",
        "when": "panelFocus"
    },
    // {
    //     "key": "ctrl+f3",
    //     "command": "workbench.action.focusPanel"
    // },
    // {
    //     "key": "ctrl+f3",
    //     "command": "workbench.action.togglePanel",
    //     "when": "panelFocus"
    // },
    // {
    //     "key": "ctrl+f3",
    //     "command": "gitlens.views.commits.focus"
    // },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    // {
    //     "key": "ctrl+f16",
    //     "command": "workbench.action.focusSideBar"
    // },
    // {
    //     "key": "ctrl+f16",
    //     "command": "outline.focus",
    //     "when": "filesExplorerFocus"
    // },
    // {
    //     "key": "ctrl+9",
    //     "command": "workbench.explorer.fileView.focus"
    // },
    // {
    //     "key": "ctrl+9",
    //     "command": "workbench.action.closeSidebar",
    //     "when": "filesExplorerFocus"
    // },
    // {
    //     "key": "ctrl+cmd+e",
    //     "command": "editor.action.rename",
    //     "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    // },
    {
        "key": "f3",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && editorTextFocus && !editorReadonly"
    },
    // {
    //     "key": "ctrl+cmd+9",
    //     "command": "workbench.explorer.fileView.focus"
    // },
    // {
    //     "key": "ctrl+cmd+f16",
    //     "command": "workbench.action.closeSidebar",
    //     "when": "filesExplorerFocus"
    // },
    // {
    //     "key": "cmd+0",
    //     "command": "workbench.explorer.fileView.focus"
    // },
    // {
    //     "key": "cmd+0",
    //     "command": "workbench.action.closeSidebar",
    //     "when": "filesExplorerFocus"
    // },
    {
        "key": "cmd+8",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+cmd+0",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarFocus && (focusedView =~ /^outline/ || focusedView =~ /^dart/)"
    },
    // {
    //     "key": "ctrl+f2",
    //     "command": "workbench.action.closeSidebar",
    //     "when": "sideBarFocus && !filesExplorerFocus && !focusedView == 'workbench.view.testing'"
    // },
    //  && !focusedView =~ /^gitlens\\.views\\.repositories/ && dartFlutterOutline.active
    // {
    //     "key": "ctrl+f3",
    //     "command": "gitlens.views.repositories.focus"
    // },
    // {
    //     "key": "ctrl+f3",
    //     "command": "workbench.action.closeSidebar",
    //     "when": "gitlens:enabled && focusedView =~ /^gitlens\\.views\\.repositories/"
    // },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.focusAuxiliaryBar"
    },
    {
        "key": "cmd+shift+g",
        "command": "workbench.scm.focus"
    },
    {
        "key": "ctrl+cmd+\\",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+shift+`",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    // {
    //     "key": "ctrl+shift+\\",
    //     "command": "workbench.action.toggleMaximizedPanel"
    // },
    {
        "key": "ctrl+9",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+alt+0",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+alt+-",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorTextFocus"
    },
    // {
    //     "key": "ctrl+\\",
    //     "command": "workbench.action.togglePanel",
    //     "when": "panelFocus"
    // },
    // {
    //     "key": "ctrl+\\",
    //     "command": "workbench.action.focusPanel",
    //     "when": "!panelFocus"
    // },
    {
        "key": "ctrl+`",
        "command": "workbench.action.togglePanel",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.focusPanel",
        "when": "!panelFocus"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.focusPanel",
        "when": "panelPosition == 'right' && !multipleEditorGroups"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.focusPanel",
        "when": "panelPosition == 'right' && multipleEditorGroups"
    },
    {
        "key": "ctrl+alt+`",
        "command": "workbench.action.positionPanelRight",
        "when": "panelPosition == 'bottom'"
    },
    {
        "key": "ctrl+alt+`",
        "command": "workbench.action.positionPanelBottom",
        "when": "panelPosition == 'right'"
    },
    {
        "key": "ctrl+alt+-",
        "command": "workbench.action.terminal.moveToEditor",
        "when": "panelFocus"
    },
    {
        "key": "ctrl+alt+=",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+tab",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+alt+tab",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+[",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "cmd+down",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "cmd+up",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    // {
    //     "key": "shift+cmd+c",
    //     "command": "extension.colorHelper.pick",
    //     "when": "editorTextFocus"
    // },
    {
        "key": "shift+cmd+c",
        "command": "extension.macColorPicker"
    },
    {
        "key": "ctrl+z",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+space",
        "command": "acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    },
    // {
    //     "key": "ctrl+space",
    //     "command": "acceptSelectedSuggestion",
    //     "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    // },
    {
        "key": "cmd+d",
        "command": "editor.action.duplicateSelection"
    },
    {
        "key": "ctrl+shift+alt+;",
        "command": "editor.action.duplicateSelection"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "cmd+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "shift+cmd+r",
        "command": "workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "cmd+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "sideBarFocus"
    },
    {
        "key": "cmd+shift+n",
        "command": "explorer.newFolder",
        "when": "sideBarFocus"
    },
    // {
    //     "key": "ctrl+cmd+0",
    //     "command": "workbench.action.quickOpen"
    // },
    // {
    //     "key": "ctrl+cmd+0",
    //     "command": "workbench.action.closeQuickOpen",
    //     "when": "inQuickOpen"
    // },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+cmd+o",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+cmd+o",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "cmd+t",
        "command": "workbench.action.terminal.splitInstance",
        "when": "terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+'",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+'",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "cmd+'",
        "command": "editor.action.autoFix",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "ctrl+cmd+alt+shift+'",
        "command": "editor.action.fixAll"
    },
    {
        "key": "cmd+m",
        "command": "editor.action.toggleMinimap"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+pagedown",
        "command": "editor.action.sortLinesAscending"
    },
    {
        "key": "cmd+pageup",
        "command": "editor.action.sortLinesDescending"
    },
    // {
    //     "key": "ctrl+9",
    //     "command": "workbench.action.focusSideBar"
    // },
    // {
    //     "key": "ctrl+9",
    //     "command": "workbench.action.toggleSidebarVisibility",
    //     "when": "sideBarFocus"
    // },
    // {
    //     "key": "ctrl+0",
    //     "command": "workbench.action.focusFirstEditorGroup"
    // },
    // {
    //     "key": "ctrl+-",
    //     "command": "workbench.action.focusSecondEditorGroup"
    // },
    // {
    //     "key": "ctrl+=",
    //     "command": "workbench.action.focusThirdEditorGroup"
    // },
    // {
    //     "key": "alt+f17",
    //     "command": "workbench.action.focusLeftGroup"
    // },
    // {
    //     "key": "alt+f18",
    //     "command": "workbench.action.focusRightGroup"
    // },
    // {
    //     "key": "ctrl+9",
    //     "command": "workbench.action.focusLeftGroup"
    // },
    // {
    //     "key": "ctrl+0",
    //     "command": "workbench.action.focusRightGroup"
    // },
    // {
    //     "key": "ctrl+cmd+9",
    //     "command": "workbench.action.focusAboveGroup"
    // },
    // {
    //     "key": "ctrl+cmd+0",
    //     "command": "workbench.action.focusBelowGroup"
    // },
    {
        "key": "alt+pageup",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "alt+pagedown",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "cmd+k cmd+p",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "cmd+k cmd+n",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "cmd+k cmd+j",
        "command": "workbench.action.joinAllGroups"
    },
    {
        "key": "ctrl+alt+8",
        "command": "workbench.action.joinAllGroups"
    },
    {
        "key": "alt+cmd+shift+p",
        "command": "shs.createServer"
    },
    {
        "key": "alt+cmd+p",
        "command": "shs.createServerWithSingleFile"
    },
    {
        "key": "ctrl+space",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "pagedown",
        "command": "cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pagedown",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+pageup",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+k cmd+u",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+cmd+o",
        "command": "workbench.action.openWorkspace"
    },
    {
        "key": "cmd+alt+shift+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+alt+shift+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+t",
        "command": "editor.action.transposeLetters",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "home",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    // {
    //     "key": "ctrl+shift+cmd+r",
    //     "command": "cursorTopSelect",
    //     "when": "textInputFocus"
    // },
    {
        "key": "end",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    // {
    //     "key": "ctrl+shift+cmd+v",
    //     "command": "cursorBottomSelect",
    //     "when": "textInputFocus"
    // },
    // {
    //     "key": "pagedown",
    //     "command": "search.action.focusNextSearchResult",
    //     "when": "hasSearchResult || inSearchEditor"
    // },
    // {
    //     "key": "pageup",
    //     "command": "search.action.focusPreviousSearchResult",
    //     "when": "hasSearchResult || inSearchEditor"
    // },
    {
        "key": "ctrl+space",
        "command": "search.action.replace",
        "when": "matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "cmd+k shift+cmd+right",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "cmd+k shift+cmd+left",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+cmd+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+cmd+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+shift+q",
        "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+l",
        "command": "-notebook.centerActiveCell",
        "when": "notebookEditorFocused"
    },
    {
        "key": "cmd+ctrl+alt+shift+l",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "cmd+ctrl+alt+shift+l",
        "command": "breadcrumbs.toggle",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "cmd+ctrl+alt+shift+l",
        "command": "breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "cmd+shift+l",
        "command": "notes.cycleTaskForward",
        "when": "editorTextFocus && resourceLangId == markdown"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "alt+q",
        "command": "extension.querySQL"
    },
    {
        "key": "alt+cmd+c",
        "command": "copyFilePath",
    },
    {
        "key": "ctrl+alt+m",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.smartSelect.expand"
    },
    {
        "key": "ctrl+shift+w",
        "command": "editor.action.smartSelect.shrink"
    },
    {
        "key": "ctrl+cmd+w",
        "command": "expand-selection-to-scope.expand"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.jumpToBracket"
    },
    {
        "key": "ctrl+shift+[",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "ctrl+]",
        "command": "editor.action.jumpToBracket"
    },
    {
        "key": "ctrl+shift+]",
        "command": "editor.action.selectToBracket"
    },
    {
        "key": "ctrl+cmd+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    // {
    //     "key": "alt+left",
    //     "command": "editor.action.moveCarretLeftAction"
    // },
    // {
    //     "key": "alt+right",
    //     "command": "editor.action.moveCarretRightAction"
    // },
    {
        "key": "ctrl+u",
        "command": "deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+tab",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "cmd+enter",
        "command": "openReferenceToSide",
        "when": "listFocus && referenceSearchVisible && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "problems.action.openToSide",
        "when": "problemFocus"
    },
    {
        "key": "cmd+enter",
        "command": "search.action.openResultToSide",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+f10",
        "command": "editor.action.peekDefinition",
    },
    {
        "key": "ctrl+shift+f10",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.peekDefinition",
    },
    // {
    //     "key": "ctrl+shift+i",
    //     "command": "editor.action.showContextMenu",
    //     "when": "textInputFocus"
    // },
    {
        "key": "alt+ctrl+f10",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+f11",
        "command": "editor.action.peekTypeDefinition",
    },
    {
        "key": "ctrl+f8",
        "command": "editor.action.peekImplementation",
    },
    {
        "key": "ctrl+f9",
        "command": "editor.action.referenceSearch.trigger"
    },
    {
        "key": "ctrl+f8",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+f9",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+f10",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+f11",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek"
    },
    {
        "key": "ctrl+f12",
        "command": "notifications.toggleList"
    },
    {
        "key": "cmd+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "cmd+shift+f",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "cmd+shift+f",
        "command": "search.action.focusSearchList",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+cmd+[",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+cmd+[",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+s",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+cmd+e",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+cmd+a",
        "command": "editor.fold",
    },
    {
        "key": "ctrl+cmd+]",
        "command": "editor.unfoldAll"
    },
    {
        "key": "ctrl+cmd+]",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+,",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+,",
        "command": "editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+d",
        "command": "deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "better-kill-ring.yank",
        "when": "textInputFocus && !editorHasMultipleSelections && !editorReadonly"
    },
    {
        "key": "shift+cmd+.",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    // {
    //     "key": "ctrl+0",
    //     "command": "workbench.action.focusNextGroup",
    // },
    // {
    //     "key": "ctrl+0",
    //     "command": "workbench.action.focusActiveEditorGroup",
    //     "when": "sideBarFocus",
    // },
    // {
    //     "key": "ctrl+0",
    //     "command": "workbench.action.focusActiveEditorGroup",
    //     "when": "terminalFocus && terminalProcessSupported",
    // },
    {
        "key": "cmd+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+cmd+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+[",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+cmd+]",
        "command": "-notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+cmd+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+cmd+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "cmd+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+cmd+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "home",
        "command": "-cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "shift+home",
        "command": "-cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "end",
        "command": "-cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "shift+end",
        "command": "-cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+q",
        "command": "-extension.queryBuild"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.querySQL"
    },
    {
        "key": "alt+cmd+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+alt+m",
        "command": "-code-runner.stop"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-code-runner.runByLanguage"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+left",
        "command": "-cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "f3",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "f3",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "-better-kill-ring.yank",
        "when": "textInputFocus && !editorHasMultipleSelections && !editorReadonly"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "alt+c p",
        "command": "-extension.colorHelper.pick",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "shift+cmd+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "cmd+l cmd+c",
        "command": "-extension.liveServer.goOffline",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+l cmd+o",
        "command": "-extension.liveServer.goOnline",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "shift+cmd+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+.",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+up",
        "command": "-list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+/",
        "command": "-gitlens.showCommitSearch",
        "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "cmd+k cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "cmd+k cmd+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-rust-analyzer.joinLines",
        "when": "editorTextFocus && editorLangId == 'rust'"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-rust-analyzer.parentModule",
        "when": "editorTextFocus && editorLangId == 'rust'"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-rust-analyzer.matchingBrace",
        "when": "editorTextFocus && editorLangId == 'rust'"
    },
    {
        "key": "cmd+down",
        "command": "-explorer.openAndPassFocus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-list.scrollDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-list.scrollUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "f1",
        "command": "revealFileInOS"
    },
    {
        "key": "alt+cmd+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+z",
        "command": "-bracket-select.undo-select",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+a",
        "command": "-bracket-select.select-include",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+a",
        "command": "-bracket-select.select",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
        "key": "cmd+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "f12",
        "command": "-editor.gotoNextSymbolFromResult",
        "when": "hasSymbols"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "-workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "alt+cmd+s",
        "command": "-mdb.runSelectedPlaygroundBlocks",
        "when": "editorLangId == 'mongodb'"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "alt+h",
        "command": "-gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "shift+cmd+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "shift+f10",
        "command": "-editor.action.showContextMenu",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k g",
        "command": "-textPowerTools.filterLinesIncludingString",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+alt+]",
        "command": "-jupyter.gotoNextCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+[",
        "command": "-jupyter.gotoPrevCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "alt+cmd+c",
        "command": "-text-transformer.camel",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+[",
        "command": "-editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "alt+]",
        "command": "-editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "cmd+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+k .",
        "command": "-extension.clipToHtml",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k t",
        "command": "-extension.insertToc",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ,",
        "command": "-extension.saveToHtml",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+c alt+l",
        "command": "-commentAnchors.navigateToAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+s",
        "command": "-gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "shift+cmd+\\",
        "command": "vscode-better-align.align",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+a",
        "command": "-vscode-better-align.align",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+up",
        "command": "-list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+cmd+8",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.focusActivityBar"
    },
    {
        "key": "cmd+k v",
        "command": "-r.rmarkdown.showPreviewToSide",
        "when": "editorTextFocus && editorLangId == 'rmd'"
    },
    {
        "key": "cmd+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+k v",
        "command": "-preview.showPreviewToSide",
        "when": "!notebookEditorFocused && !terminalFocus"
    },
    {
        "key": "shift+cmd+q",
        "command": "-sqlite.runDocumentQuery",
        "when": "editorLangId =~ /(sql|sqlite)/"
    },
    {
        "key": "shift+cmd+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationToastsVisible"
    },
    {
        "key": "shift+alt+cmd+d",
        "command": "dart.openDevTools",
        "when": "dart-code:anyProjectLoaded"
    },
    {
        "key": "ctrl+alt+d",
        "command": "-dart.openDevTools",
        "when": "dart-code:anyProjectLoaded"
    },
    {
        "key": "shift+cmd+e",
        "command": "-mssql.runQuery",
        "when": "editorTextFocus && editorLangId == 'sql'"
    },
    {
        "key": "cmd+l",
        "command": "-notes.cycleTaskForward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "continue.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+l",
        "command": "-continue.toggleAuxiliaryBar"
    },
    {
        "key": "shift+cmd+e",
        "command": "workbench.files.action.focusFilesExplorer"
    },
    {
        "key": "shift+cmd+j",
        "command": "codeium.chatPanelView.focus"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused"
    },
    {
        "key": "alt+;",
        "command": "github.copilot.nextPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "alt+]",
        "command": "-github.copilot.nextPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "alt+j",
        "command": "github.copilot.previousPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "alt+[",
        "command": "-github.copilot.previousPanelSolution",
        "when": "github.copilot.activated && github.copilot.panelVisible"
    },
    {
        "key": "shift+cmd+i",
        "command": "-insertDateString.insertDateTime",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+cmd+i",
        "command": "-insertDateString.insertOwnFormatDateTime",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+cmd+t",
        "command": "insertDateString.insertDate"
    },
    {
        "key": "alt+enter",
        "command": "-extension.printDir",
        "when": "editorTextFocus && editorLangId == 'python'"
    },
    {
        "key": "ctrl+cmd+enter",
        "command": "jupyter.restartkernelandrunuptoselectedcell"
    },
    {
        "key": "shift+cmd+r",
        "command": "-workbench.view.extension.rapidapi-explorer",
        "when": "viewContainer.workbench.view.extension.rapidapi-explorer.enabled"
    },
    {
        "key": "shift+cmd+r",
        "command": "-reactSnippets.search",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+r",
        "command": "-continue.debugTerminal"
    },
    {
        "key": "shift+cmd+r",
        "command": "-extension.newAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "shift+cmd+a",
        "command": "-extension.currentAREPLSession",
        "when": "!inQuickOpen && !terminalFocus"
    },
    {
        "key": "shift+cmd+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible"
    },
    {
        "key": "shift+cmd+a",
        "command": "postman-for-vscode.sidebar-panel.focus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-postman-for-vscode.sidebar-panel.focus"
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "alt+\\",
        "command": "-editor.action.inlineSuggest.trigger",
        "when": "config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
    },
    {
        "key": "alt+i",
        "command": "markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+space",
        "command": "-issue.suggestRefresh",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "cmd+i",
        "command": "-markdown.extension.editing.toggleItalic",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "cmd+t",
        "command": "python.createNewFile"
    },
    {
        "key": "ctrl+m",
        "command": "pythonIndent.newlineAndIndent",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+b",
        "command": "dbcode.connections.view.focus",
        "when": "editorHasMultipleSelections && !editorTextFocus || editorHasSelection && !editorTextFocus || !editorHasMultipleSelections && !editorHasSelection"
    },
    {
        "key": "cmd+d cmd+b",
        "command": "-dbcode.connections.view.focus",
        "when": "editorHasMultipleSelections && !editorTextFocus || editorHasSelection && !editorTextFocus || !editorHasMultipleSelections && !editorHasSelection"
    },
    {
        "key": "shift+cmd+i",
        "command": "-workbench.action.chat.openAgent",
        "when": "config.chat.agent.enabled && !chatSetupDisabled && !chatSetupHidden"
    }
]